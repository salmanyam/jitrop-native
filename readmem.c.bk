#include <stdio.h>
#include <stdlib.h>
// #include <sys/mman.h>
#include <fcntl.h>
#include <errno.h>
#include <unistd.h>
#include <string.h>

void readmem(int pid, unsigned long addr, int len)
{

  char* proc_mem = malloc(50);
  sprintf(proc_mem, "/proc/%d/mem", pid);
  //sprintf(proc_mem, "./memory.dump");

  printf("opening %s, address is %ld\n", proc_mem, addr);
  int fd_proc_mem = open(proc_mem, O_RDONLY);
  if (fd_proc_mem == -1) {
    printf("Could not open %s\n", proc_mem);
    exit(1);
  }

  char* buf = malloc(len);

  lseek(fd_proc_mem, addr, SEEK_SET);
  read (fd_proc_mem, buf , len     );

  printf("String at %ld in process %d is:\n", addr, pid);
  printf("  %s\n", buf);
	for (int mylen=0; mylen</*strlen(buf)*/len; mylen++)
			printf("%x ", buf[mylen]);

  /*printf("\nNow, this string is modified\n");
  strncpy(buf, "Hello from proc-2", len);

  lseek(fd_proc_mem, addr, SEEK_SET);
  if (write (fd_proc_mem, buf , len     ) == -1) {
     printf("Error while writing\n");
     exit(1);
  }*/

  free(buf);
  free(proc_mem);
}

unsigned long page_no(unsigned long addr){
	return addr & 0xFFFFFFFFFFFFF000;
}

int main(int argc, char* argv[]) {

  if (argc != 3) {
    printf("proc-2  pid  addr  length\n");
    exit(1);
  }
  
  int           pid  = strtol (argv[1], NULL, 10);
  unsigned long addr = strtoul(argv[2], NULL, 16);
  //int           len  = strtol (argv[3], NULL, 10);

  unsigned long pageno = page_no(addr);

  printf("%lx\n", pageno);

  readmem(pid, addr, 1);
  //readmem(27242, 0x7ff45eecf126 , 10);
  //readmem(1070, 0x000055df51ce12e2, 1);

}
